// we-removebg-preview 1


var view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 75, height: 57)

view.backgroundColor = .white


let image0 = UIImage(named: "we-removebg-preview.png")?.cgImage

let layer0 = CALayer()

layer0.contents = image0

layer0.transform = CATransform3DMakeAffineTransform(CGAffineTransform(a: 1.68, b: 0, c: 0, d: 2.07, tx: -0.27, ty: -0.28))

layer0.bounds = view.bounds

layer0.position = view.center

view.layer.addSublayer(layer0)



var parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false

view.widthAnchor.constraint(equalToConstant: 75).isActive = true

view.heightAnchor.constraint(equalToConstant: 57).isActive = true

view.leadingAnchor.constraint(equalTo: parent.leadingAnchor, constant: 170).isActive = true

view.topAnchor.constraint(equalTo: parent.topAnchor, constant: 47).isActive = true




// status bar


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 375, height: 44)

view.backgroundColor = .white



parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false

view.widthAnchor.constraint(equalToConstant: 375).isActive = true

view.heightAnchor.constraint(equalToConstant: 44).isActive = true

view.leadingAnchor.constraint(equalTo: parent.leadingAnchor, constant: -3).isActive = true

view.topAnchor.constraint(equalTo: parent.topAnchor, constant: 0).isActive = true




// Line 40


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 419, height: 0)

view.backgroundColor = .white


var stroke = UIView()

stroke.bounds = view.bounds.insetBy(dx: -0.5, dy: -0.5)

stroke.center = view.center

view.addSubview(stroke)

view.bounds = view.bounds.insetBy(dx: -0.5, dy: -0.5)

stroke.layer.borderWidth = 1

stroke.layer.borderColor = UIColor(red: 0.921, green: 0.94, blue: 1, alpha: 1).cgColor


parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false




// Forms


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 349, height: 160)

view.backgroundColor = .white



parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false

view.widthAnchor.constraint(equalToConstant: 349).isActive = true

view.heightAnchor.constraint(equalToConstant: 160).isActive = true

view.leadingAnchor.constraint(equalTo: parent.leadingAnchor, constant: 35).isActive = true

view.topAnchor.constraint(equalTo: parent.topAnchor, constant: 152).isActive = true




// Forms


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 349, height: 50)

view.backgroundColor = .white



parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false




// Rectangle 155


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 349, height: 50)

view.backgroundColor = .white


view.layer.backgroundColor = UIColor(red: 0.949, green: 0.949, blue: 0.949, alpha: 1).cgColor

view.layer.cornerRadius = 10


parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false




// Rectangle 156


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 349, height: 50)

view.backgroundColor = .white


view.layer.backgroundColor = UIColor(red: 0.949, green: 0.949, blue: 0.949, alpha: 1).cgColor

view.layer.cornerRadius = 10


parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false




// Enter location


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 98, height: 53.36)

view.backgroundColor = .white


view.textColor = UIColor(red: 0, green: 0, blue: 0, alpha: 1)

view.font = UIFont(name: "Actor-Regular", size: 15)

var paragraphStyle = NSMutableParagraphStyle()

paragraphStyle.lineHeightMultiple = 1.25


// Line height: 22 pt


view.attributedText = NSMutableAttributedString(string: "Enter location", attributes: [NSAttributedString.Key.paragraphStyle: paragraphStyle])


parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false




// Discount code


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 98, height: 53.36)

view.backgroundColor = .white


view.textColor = UIColor(red: 0, green: 0, blue: 0, alpha: 1)

view.font = UIFont(name: "Actor-Regular", size: 15)

paragraphStyle = NSMutableParagraphStyle()

paragraphStyle.lineHeightMultiple = 1.25


// Line height: 22 pt


view.attributedText = NSMutableAttributedString(string: "Discount code", attributes: [NSAttributedString.Key.paragraphStyle: paragraphStyle])


parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false




// Group 60


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 285, height: 29)

view.backgroundColor = .white


view.layer.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0).cgColor


parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false

view.widthAnchor.constraint(equalToConstant: 285).isActive = true

view.heightAnchor.constraint(equalToConstant: 29).isActive = true

view.leadingAnchor.constraint(equalTo: parent.leadingAnchor, constant: 65).isActive = true

view.topAnchor.constraint(equalTo: parent.topAnchor, constant: 458).isActive = true




// Primary button


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 345, height: 50)

view.backgroundColor = .white



parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false

view.widthAnchor.constraint(equalToConstant: 345).isActive = true

view.heightAnchor.constraint(equalToConstant: 50).isActive = true

view.leadingAnchor.constraint(equalTo: parent.leadingAnchor, constant: 32).isActive = true

view.topAnchor.constraint(equalTo: parent.topAnchor, constant: 817).isActive = true




// Vector


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 62, height: 34)

view.backgroundColor = .white


view.layer.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 1).cgColor


parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false




// Vector


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 52, height: 29.25)

view.backgroundColor = .white


view.layer.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 1).cgColor


parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false




// question-circle


view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 22, height: 24)

view.backgroundColor = .white
